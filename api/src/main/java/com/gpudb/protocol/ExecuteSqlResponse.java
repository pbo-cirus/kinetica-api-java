/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import com.gpudb.Record;
import com.gpudb.Type;
import org.apache.avro.generic.GenericData;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;


/**
 * A set of results returned by {@link
 * com.gpudb.GPUdb#executeSql(ExecuteSqlRequest)}.
 */
public class ExecuteSqlResponse {

    private long countAffected;
    private List<Record> data;
    private long totalNumberOfRecords;
    private boolean hasMoreRecords;
    private String pagingTable;
    private Map<String, String> info;
    private Type dataType;
    /**
     * Constructs an ExecuteSqlResponse object with default parameters.
     */
    public ExecuteSqlResponse() {
    }

    /**
     * @return The number of objects/records affected.
     */
    public long getCountAffected() {
        return countAffected;
    }

    /**
     * @param countAffected The number of objects/records affected.
     * @return {@code this} to mimic the builder pattern.
     */
    public ExecuteSqlResponse setCountAffected(long countAffected) {
        this.countAffected = countAffected;
        return this;
    }

    /**
     * @return Avro binary encoded response.
     */
    public List<Record> getData() {
        return data;
    }

    /**
     * @param data Avro binary encoded response.
     * @return {@code this} to mimic the builder pattern.
     */
    public ExecuteSqlResponse setData(List<Record> data) {
        this.data = (data == null) ? new ArrayList<Record>() : data;
        return this;
    }

    /**
     * @return Total/Filtered number of records.
     */
    public long getTotalNumberOfRecords() {
        return totalNumberOfRecords;
    }

    /**
     * @param totalNumberOfRecords Total/Filtered number of records.
     * @return {@code this} to mimic the builder pattern.
     */
    public ExecuteSqlResponse setTotalNumberOfRecords(long totalNumberOfRecords) {
        this.totalNumberOfRecords = totalNumberOfRecords;
        return this;
    }

    /**
     * @return Too many records. Returned a partial set.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.RawExecuteSqlResponse.HasMoreRecords#TRUE
     * TRUE}
     *         <li> {@link
     * com.gpudb.protocol.RawExecuteSqlResponse.HasMoreRecords#FALSE
     * FALSE}
     * </ul>
     */
    public boolean getHasMoreRecords() {
        return hasMoreRecords;
    }

    /**
     * @param hasMoreRecords Too many records. Returned a partial set.
     *                       Supported values:
     *                       <ul>
     *                               <li> {@link
     *                       com.gpudb.protocol.RawExecuteSqlResponse.HasMoreRecords#TRUE
     *                       TRUE}
     *                               <li> {@link
     *                       com.gpudb.protocol.RawExecuteSqlResponse.HasMoreRecords#FALSE
     *                       FALSE}
     *                       </ul>
     * @return {@code this} to mimic the builder pattern.
     */
    public ExecuteSqlResponse setHasMoreRecords(boolean hasMoreRecords) {
        this.hasMoreRecords = hasMoreRecords;
        return this;
    }

    /**
     * @return Name of the table that has the result records of the query.
     * Valid, when {@code hasMoreRecords} is {@code true} (Subject to
     * config.paging_tables_enabled)
     */
    public String getPagingTable() {
        return pagingTable;
    }

    /**
     * @param pagingTable Name of the table that has the result records of the
     *                    query. Valid, when {@code hasMoreRecords} is {@code
     *                    true} (Subject to config.paging_tables_enabled)
     * @return {@code this} to mimic the builder pattern.
     */
    public ExecuteSqlResponse setPagingTable(String pagingTable) {
        this.pagingTable = (pagingTable == null) ? "" : pagingTable;
        return this;
    }

    /**
     * @return Additional information.
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.RawExecuteSqlResponse.Info#COUNT COUNT}:
     * Number of records in the final table
     * </ul>
     * The default value is an empty {@link Map}.
     */
    public Map<String, String> getInfo() {
        return info;
    }

    /**
     * @param info Additional information.
     *             <ul>
     *                     <li> {@link
     *             com.gpudb.protocol.RawExecuteSqlResponse.Info#COUNT COUNT}:
     *             Number of records in the final table
     *             </ul>
     *             The default value is an empty {@link Map}.
     * @return {@code this} to mimic the builder pattern.
     */
    public ExecuteSqlResponse setInfo(Map<String, String> info) {
        this.info = (info == null) ? new LinkedHashMap<String, String>() : info;
        return this;
    }

    /**
     * @return The {@link Type} object containing the type of the dynamically
     * generated data.
     */
    public Type getDataType() {
        return dataType;
    }

    /**
     * @param dataType The {@link Type} object containing the type of the
     *                 dynamically generated data.
     * @return {@code this} to mimic the builder pattern.
     */
    public ExecuteSqlResponse setDataType(Type dataType) {
        this.dataType = dataType;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }

        if ((obj == null) || (obj.getClass() != this.getClass())) {
            return false;
        }

        ExecuteSqlResponse that = (ExecuteSqlResponse) obj;

        return ((this.countAffected == that.countAffected)
                && this.data.equals(that.data)
                && (this.totalNumberOfRecords == that.totalNumberOfRecords)
                && (this.hasMoreRecords == that.hasMoreRecords)
                && this.pagingTable.equals(that.pagingTable)
                && this.info.equals(that.info)
                && this.dataType.equals(that.dataType));
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append("{");
        builder.append(gd.toString("countAffected"));
        builder.append(": ");
        builder.append(gd.toString(this.countAffected));
        builder.append(", ");
        builder.append(gd.toString("data"));
        builder.append(": ");
        builder.append(gd.toString(this.data));
        builder.append(", ");
        builder.append(gd.toString("totalNumberOfRecords"));
        builder.append(": ");
        builder.append(gd.toString(this.totalNumberOfRecords));
        builder.append(", ");
        builder.append(gd.toString("hasMoreRecords"));
        builder.append(": ");
        builder.append(gd.toString(this.hasMoreRecords));
        builder.append(", ");
        builder.append(gd.toString("pagingTable"));
        builder.append(": ");
        builder.append(gd.toString(this.pagingTable));
        builder.append(", ");
        builder.append(gd.toString("info"));
        builder.append(": ");
        builder.append(gd.toString(this.info));
        builder.append(", ");
        builder.append(gd.toString("dataType"));
        builder.append(": ");
        builder.append(gd.toString(this.dataType));
        builder.append("}");

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + ((Long) this.countAffected).hashCode();
        hashCode = (31 * hashCode) + this.data.hashCode();
        hashCode = (31 * hashCode) + ((Long) this.totalNumberOfRecords).hashCode();
        hashCode = (31 * hashCode) + ((Boolean) this.hasMoreRecords).hashCode();
        hashCode = (31 * hashCode) + this.pagingTable.hashCode();
        hashCode = (31 * hashCode) + this.info.hashCode();
        hashCode = (31 * hashCode) + this.dataType.hashCode();
        return hashCode;
    }

    /**
     * Too many records. Returned a partial set.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.RawExecuteSqlResponse.HasMoreRecords#TRUE TRUE}
     *         <li> {@link
     * com.gpudb.protocol.RawExecuteSqlResponse.HasMoreRecords#FALSE FALSE}
     * </ul>
     * A set of string constants for the parameter {@code hasMoreRecords}.
     */
    public static final class HasMoreRecords {
        public static final String TRUE = "true";
        public static final String FALSE = "false";

        private HasMoreRecords() {
        }
    }

    /**
     * Additional information.
     * <ul>
     *         <li> {@link com.gpudb.protocol.RawExecuteSqlResponse.Info#COUNT
     * COUNT}: Number of records in the final table
     * </ul>
     * The default value is an empty {@link Map}.
     * A set of string constants for the parameter {@code info}.
     */
    public static final class Info {

        /**
         * Number of records in the final table
         */
        public static final String COUNT = "count";

        private Info() {
        }
    }

}
