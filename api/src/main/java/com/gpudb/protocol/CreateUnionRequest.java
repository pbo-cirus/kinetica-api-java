/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;


/**
 * A set of parameters for {@link
 * com.gpudb.GPUdb#createUnion(CreateUnionRequest)}.
 * <p>
 * Merges data from one or more tables with comparable data types into a new
 * table.
 * <p>
 * The following merges are supported:
 * <p>
 * UNION (DISTINCT/ALL) - For data set union details and examples, see <a
 * href="../../../../../concepts/unions.html" target="_top">Union</a>.  For
 * limitations, see <a
 * href="../../../../../concepts/unions.html#limitations-and-cautions"
 * target="_top">Union Limitations and Cautions</a>.
 * <p>
 * INTERSECT (DISTINCT/ALL) - For data set intersection details and examples,
 * see <a href="../../../../../concepts/intersect.html"
 * target="_top">Intersect</a>.  For limitations, see <a
 * href="../../../../../concepts/intersect.html#limitations"
 * target="_top">Intersect Limitations</a>.
 * <p>
 * EXCEPT (DISTINCT/ALL) - For data set subtraction details and examples, see
 * <a href="../../../../../concepts/except.html" target="_top">Except</a>.  For
 * limitations, see <a href="../../../../../concepts/except.html#limitations"
 * target="_top">Except Limitations</a>.
 * <p>
 * MERGE VIEWS - For a given set of <a
 * href="../../../../../concepts/filtered_views.html" target="_top">filtered
 * views</a> on a single table, creates a single filtered view containing all
 * of the unique records across all of the given filtered data sets.
 * <p>
 * Non-charN 'string' and 'bytes' column types cannot be merged, nor can
 * columns marked as <a href="../../../../../concepts/types.html#data-handling"
 * target="_top">store-only</a>.
 */
public class CreateUnionRequest implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("CreateUnionRequest")
            .namespace("com.gpudb")
            .fields()
            .name("tableName").type().stringType().noDefault()
            .name("tableNames").type().array().items().stringType().noDefault()
            .name("inputColumnNames").type().array().items().array().items().stringType().noDefault()
            .name("outputColumnNames").type().array().items().stringType().noDefault()
            .name("options").type().map().values().stringType().noDefault()
            .endRecord();
    private String tableName;
    private List<String> tableNames;
    private List<List<String>> inputColumnNames;
    private List<String> outputColumnNames;
    private Map<String, String> options;
    /**
     * Constructs a CreateUnionRequest object with default parameters.
     */
    public CreateUnionRequest() {
        tableName = "";
        tableNames = new ArrayList<>();
        inputColumnNames = new ArrayList<>();
        outputColumnNames = new ArrayList<>();
        options = new LinkedHashMap<>();
    }
    /**
     * Constructs a CreateUnionRequest object with the specified parameters.
     *
     * @param tableName         Name of the table to be created. Has the same naming
     *                          restrictions as <a
     *                          href="../../../../../concepts/tables.html"
     *                          target="_top">tables</a>.
     * @param tableNames        The list of table names to merge. Must contain the
     *                          names of one or more existing tables.
     * @param inputColumnNames  The list of columns from each of the
     *                          corresponding input tables.
     * @param outputColumnNames The list of names of the columns to be stored
     *                          in the output table.
     * @param options           Optional parameters.
     *                          <ul>
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#COLLECTION_NAME
     *                          COLLECTION_NAME}: Name of a collection which is to
     *                          contain the output table. If the collection provided is
     *                          non-existent, the collection will be automatically
     *                          created. If empty, the output table will be a top-level
     *                          table.  The default value is ''.
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#MATERIALIZE_ON_GPU
     *                          MATERIALIZE_ON_GPU}: No longer used.  See <a
     *                          href="../../../../../rm/concepts.html"
     *                          target="_top">Resource Management Concepts</a> for
     *                          information about how resources are managed, <a
     *                          href="../../../../../rm/concepts.html"
     *                          target="_top">Tier Strategy Concepts</a> for how
     *                          resources are targeted for VRAM, and <a
     *                          href="../../../../../rm/usage.html#tier-strategies"
     *                          target="_top">Tier Strategy Usage</a> for how to specify
     *                          a table's priority in VRAM.
     *                          Supported values:
     *                          <ul>
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#TRUE TRUE}
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                          FALSE}
     *                          </ul>
     *                          The default value is {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                          FALSE}.
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#MODE
     *                          MODE}: If {@code merge_views}, then this operation will
     *                          merge the provided views. All {@code tableNames} must be
     *                          views from the same underlying base table.
     *                          Supported values:
     *                          <ul>
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#UNION_ALL
     *                          UNION_ALL}: Retains all rows from the specified tables.
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#UNION
     *                          UNION}: Retains all unique rows from the specified
     *                          tables (synonym for {@code union_distinct}).
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#UNION_DISTINCT
     *                          UNION_DISTINCT}: Retains all unique rows from the
     *                          specified tables.
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#EXCEPT
     *                          EXCEPT}: Retains all unique rows from the first table
     *                          that do not appear in the second table (only works on 2
     *                          tables).
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#EXCEPT_ALL
     *                          EXCEPT_ALL}: Retains all rows(including duplicates) from
     *                          the first table that do not appear in the second table
     *                          (only works on 2 tables).
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#INTERSECT
     *                          INTERSECT}: Retains all unique rows that appear in both
     *                          of the specified tables (only works on 2 tables).
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#INTERSECT_ALL
     *                          INTERSECT_ALL}: Retains all rows(including duplicates)
     *                          that appear in both of the specified tables (only works
     *                          on 2 tables).
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#MERGE_VIEWS
     *                          MERGE_VIEWS}: Merge two or more views (or views of
     *                          views) of the same base data set into a new view. If
     *                          this mode is selected {@code inputColumnNames} AND
     *                          {@code outputColumnNames} must be empty. The resulting
     *                          view would match the results of a SQL OR operation,
     *                          e.g., if filter 1 creates a view using the expression 'x
     *                          = 20' and filter 2 creates a view using the expression
     *                          'x <= 10', then the merge views operation creates a new
     *                          view using the expression 'x = 20 OR x <= 10'.
     *                          </ul>
     *                          The default value is {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#UNION_ALL
     *                          UNION_ALL}.
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#CHUNK_SIZE
     *                          CHUNK_SIZE}: Indicates the number of records per chunk
     *                          to be used for this output table.
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#CREATE_INDEXES
     *                          CREATE_INDEXES}: Comma-separated list of columns on
     *                          which to create indexes on the output table.  The
     *                          columns specified must be present in {@code
     *                          outputColumnNames}.
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#TTL TTL}:
     *                          Sets the <a href="../../../../../concepts/ttl.html"
     *                          target="_top">TTL</a> of the output table specified in
     *                          {@code tableName}.
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#PERSIST
     *                          PERSIST}: If {@code true}, then the output table
     *                          specified in {@code tableName} will be persisted and
     *                          will not expire unless a {@code ttl} is specified.   If
     *                          {@code false}, then the output table will be an
     *                          in-memory table and will expire unless a {@code ttl} is
     *                          specified otherwise.
     *                          Supported values:
     *                          <ul>
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#TRUE TRUE}
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                          FALSE}
     *                          </ul>
     *                          The default value is {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                          FALSE}.
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#VIEW_ID
     *                          VIEW_ID}: ID of view of which this output table is a
     *                          member.  The default value is ''.
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#FORCE_REPLICATED
     *                          FORCE_REPLICATED}: If {@code true}, then the output
     *                          table specified in {@code tableName} will be replicated
     *                          even if the source tables are not.
     *                          Supported values:
     *                          <ul>
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#TRUE TRUE}
     *                                  <li> {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                          FALSE}
     *                          </ul>
     *                          The default value is {@link
     *                          com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                          FALSE}.
     *                          </ul>
     *                          The default value is an empty {@link Map}.
     */
    public CreateUnionRequest(String tableName, List<String> tableNames, List<List<String>> inputColumnNames, List<String> outputColumnNames, Map<String, String> options) {
        this.tableName = (tableName == null) ? "" : tableName;
        this.tableNames = (tableNames == null) ? new ArrayList<String>() : tableNames;
        this.inputColumnNames = (inputColumnNames == null) ? new ArrayList<List<String>>() : inputColumnNames;
        this.outputColumnNames = (outputColumnNames == null) ? new ArrayList<String>() : outputColumnNames;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return the schema for the class.
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    /**
     * @return Name of the table to be created. Has the same naming
     * restrictions as <a href="../../../../../concepts/tables.html"
     * target="_top">tables</a>.
     */
    public String getTableName() {
        return tableName;
    }

    /**
     * @param tableName Name of the table to be created. Has the same naming
     *                  restrictions as <a
     *                  href="../../../../../concepts/tables.html"
     *                  target="_top">tables</a>.
     * @return {@code this} to mimic the builder pattern.
     */
    public CreateUnionRequest setTableName(String tableName) {
        this.tableName = (tableName == null) ? "" : tableName;
        return this;
    }

    /**
     * @return The list of table names to merge. Must contain the names of one
     * or more existing tables.
     */
    public List<String> getTableNames() {
        return tableNames;
    }

    /**
     * @param tableNames The list of table names to merge. Must contain the
     *                   names of one or more existing tables.
     * @return {@code this} to mimic the builder pattern.
     */
    public CreateUnionRequest setTableNames(List<String> tableNames) {
        this.tableNames = (tableNames == null) ? new ArrayList<String>() : tableNames;
        return this;
    }

    /**
     * @return The list of columns from each of the corresponding input tables.
     */
    public List<List<String>> getInputColumnNames() {
        return inputColumnNames;
    }

    /**
     * @param inputColumnNames The list of columns from each of the
     *                         corresponding input tables.
     * @return {@code this} to mimic the builder pattern.
     */
    public CreateUnionRequest setInputColumnNames(List<List<String>> inputColumnNames) {
        this.inputColumnNames = (inputColumnNames == null) ? new ArrayList<List<String>>() : inputColumnNames;
        return this;
    }

    /**
     * @return The list of names of the columns to be stored in the output
     * table.
     */
    public List<String> getOutputColumnNames() {
        return outputColumnNames;
    }

    /**
     * @param outputColumnNames The list of names of the columns to be stored
     *                          in the output table.
     * @return {@code this} to mimic the builder pattern.
     */
    public CreateUnionRequest setOutputColumnNames(List<String> outputColumnNames) {
        this.outputColumnNames = (outputColumnNames == null) ? new ArrayList<String>() : outputColumnNames;
        return this;
    }

    /**
     * @return Optional parameters.
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#COLLECTION_NAME
     * COLLECTION_NAME}: Name of a collection which is to contain the
     * output table. If the collection provided is non-existent, the
     * collection will be automatically created. If empty, the output
     * table will be a top-level table.  The default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#MATERIALIZE_ON_GPU
     * MATERIALIZE_ON_GPU}: No longer used.  See <a
     * href="../../../../../rm/concepts.html" target="_top">Resource
     * Management Concepts</a> for information about how resources are
     * managed, <a href="../../../../../rm/concepts.html"
     * target="_top">Tier Strategy Concepts</a> for how resources are
     * targeted for VRAM, and <a
     * href="../../../../../rm/usage.html#tier-strategies"
     * target="_top">Tier Strategy Usage</a> for how to specify a
     * table's priority in VRAM.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#TRUE TRUE}
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#FALSE FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#FALSE FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#MODE MODE}: If
     * {@code merge_views}, then this operation will merge the provided
     * views. All {@code tableNames} must be views from the same
     * underlying base table.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#UNION_ALL
     * UNION_ALL}: Retains all rows from the specified tables.
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#UNION UNION}:
     * Retains all unique rows from the specified tables (synonym for
     * {@code union_distinct}).
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#UNION_DISTINCT
     * UNION_DISTINCT}: Retains all unique rows from the specified
     * tables.
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#EXCEPT EXCEPT}:
     * Retains all unique rows from the first table that do not appear
     * in the second table (only works on 2 tables).
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#EXCEPT_ALL
     * EXCEPT_ALL}: Retains all rows(including duplicates) from the
     * first table that do not appear in the second table (only works
     * on 2 tables).
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#INTERSECT
     * INTERSECT}: Retains all unique rows that appear in both of the
     * specified tables (only works on 2 tables).
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#INTERSECT_ALL
     * INTERSECT_ALL}: Retains all rows(including duplicates) that
     * appear in both of the specified tables (only works on 2 tables).
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#MERGE_VIEWS
     * MERGE_VIEWS}: Merge two or more views (or views of views) of the
     * same base data set into a new view. If this mode is selected
     * {@code inputColumnNames} AND {@code outputColumnNames} must be
     * empty. The resulting view would match the results of a SQL OR
     * operation, e.g., if filter 1 creates a view using the expression
     * 'x = 20' and filter 2 creates a view using the expression 'x <=
     * 10', then the merge views operation creates a new view using the
     * expression 'x = 20 OR x <= 10'.
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#UNION_ALL
     * UNION_ALL}.
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#CHUNK_SIZE
     * CHUNK_SIZE}: Indicates the number of records per chunk to be
     * used for this output table.
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#CREATE_INDEXES
     * CREATE_INDEXES}: Comma-separated list of columns on which to
     * create indexes on the output table.  The columns specified must
     * be present in {@code outputColumnNames}.
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#TTL TTL}: Sets the
     * <a href="../../../../../concepts/ttl.html" target="_top">TTL</a>
     * of the output table specified in {@code tableName}.
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#PERSIST PERSIST}:
     * If {@code true}, then the output table specified in {@code
     * tableName} will be persisted and will not expire unless a {@code
     * ttl} is specified.   If {@code false}, then the output table
     * will be an in-memory table and will expire unless a {@code ttl}
     * is specified otherwise.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#TRUE TRUE}
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#FALSE FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#FALSE FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#VIEW_ID VIEW_ID}:
     * ID of view of which this output table is a member.  The default
     * value is ''.
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#FORCE_REPLICATED
     * FORCE_REPLICATED}: If {@code true}, then the output table
     * specified in {@code tableName} will be replicated even if the
     * source tables are not.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#TRUE TRUE}
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#FALSE FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#FALSE FALSE}.
     * </ul>
     * The default value is an empty {@link Map}.
     */
    public Map<String, String> getOptions() {
        return options;
    }

    /**
     * @param options Optional parameters.
     *                <ul>
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#COLLECTION_NAME
     *                COLLECTION_NAME}: Name of a collection which is to
     *                contain the output table. If the collection provided is
     *                non-existent, the collection will be automatically
     *                created. If empty, the output table will be a top-level
     *                table.  The default value is ''.
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#MATERIALIZE_ON_GPU
     *                MATERIALIZE_ON_GPU}: No longer used.  See <a
     *                href="../../../../../rm/concepts.html"
     *                target="_top">Resource Management Concepts</a> for
     *                information about how resources are managed, <a
     *                href="../../../../../rm/concepts.html"
     *                target="_top">Tier Strategy Concepts</a> for how
     *                resources are targeted for VRAM, and <a
     *                href="../../../../../rm/usage.html#tier-strategies"
     *                target="_top">Tier Strategy Usage</a> for how to specify
     *                a table's priority in VRAM.
     *                Supported values:
     *                <ul>
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#TRUE TRUE}
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                FALSE}
     *                </ul>
     *                The default value is {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                FALSE}.
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#MODE
     *                MODE}: If {@code merge_views}, then this operation will
     *                merge the provided views. All {@code tableNames} must be
     *                views from the same underlying base table.
     *                Supported values:
     *                <ul>
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#UNION_ALL
     *                UNION_ALL}: Retains all rows from the specified tables.
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#UNION
     *                UNION}: Retains all unique rows from the specified
     *                tables (synonym for {@code union_distinct}).
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#UNION_DISTINCT
     *                UNION_DISTINCT}: Retains all unique rows from the
     *                specified tables.
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#EXCEPT
     *                EXCEPT}: Retains all unique rows from the first table
     *                that do not appear in the second table (only works on 2
     *                tables).
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#EXCEPT_ALL
     *                EXCEPT_ALL}: Retains all rows(including duplicates) from
     *                the first table that do not appear in the second table
     *                (only works on 2 tables).
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#INTERSECT
     *                INTERSECT}: Retains all unique rows that appear in both
     *                of the specified tables (only works on 2 tables).
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#INTERSECT_ALL
     *                INTERSECT_ALL}: Retains all rows(including duplicates)
     *                that appear in both of the specified tables (only works
     *                on 2 tables).
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#MERGE_VIEWS
     *                MERGE_VIEWS}: Merge two or more views (or views of
     *                views) of the same base data set into a new view. If
     *                this mode is selected {@code inputColumnNames} AND
     *                {@code outputColumnNames} must be empty. The resulting
     *                view would match the results of a SQL OR operation,
     *                e.g., if filter 1 creates a view using the expression 'x
     *                = 20' and filter 2 creates a view using the expression
     *                'x <= 10', then the merge views operation creates a new
     *                view using the expression 'x = 20 OR x <= 10'.
     *                </ul>
     *                The default value is {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#UNION_ALL
     *                UNION_ALL}.
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#CHUNK_SIZE
     *                CHUNK_SIZE}: Indicates the number of records per chunk
     *                to be used for this output table.
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#CREATE_INDEXES
     *                CREATE_INDEXES}: Comma-separated list of columns on
     *                which to create indexes on the output table.  The
     *                columns specified must be present in {@code
     *                outputColumnNames}.
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#TTL TTL}:
     *                Sets the <a href="../../../../../concepts/ttl.html"
     *                target="_top">TTL</a> of the output table specified in
     *                {@code tableName}.
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#PERSIST
     *                PERSIST}: If {@code true}, then the output table
     *                specified in {@code tableName} will be persisted and
     *                will not expire unless a {@code ttl} is specified.   If
     *                {@code false}, then the output table will be an
     *                in-memory table and will expire unless a {@code ttl} is
     *                specified otherwise.
     *                Supported values:
     *                <ul>
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#TRUE TRUE}
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                FALSE}
     *                </ul>
     *                The default value is {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                FALSE}.
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#VIEW_ID
     *                VIEW_ID}: ID of view of which this output table is a
     *                member.  The default value is ''.
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#FORCE_REPLICATED
     *                FORCE_REPLICATED}: If {@code true}, then the output
     *                table specified in {@code tableName} will be replicated
     *                even if the source tables are not.
     *                Supported values:
     *                <ul>
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#TRUE TRUE}
     *                        <li> {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                FALSE}
     *                </ul>
     *                The default value is {@link
     *                com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                FALSE}.
     *                </ul>
     *                The default value is an empty {@link Map}.
     * @return {@code this} to mimic the builder pattern.
     */
    public CreateUnionRequest setOptions(Map<String, String> options) {
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return the schema object describing this class.
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index the position of the field to get
     * @return value of the field with the given index.
     * @throws IndexOutOfBoundsException
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.tableName;

            case 1:
                return this.tableNames;

            case 2:
                return this.inputColumnNames;

            case 3:
                return this.outputColumnNames;

            case 4:
                return this.options;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index the position of the field to set
     * @param value the value to set
     * @throws IndexOutOfBoundsException
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.tableName = (String) value;
                break;

            case 1:
                this.tableNames = (List<String>) value;
                break;

            case 2:
                this.inputColumnNames = (List<List<String>>) value;
                break;

            case 3:
                this.outputColumnNames = (List<String>) value;
                break;

            case 4:
                this.options = (Map<String, String>) value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }

        if ((obj == null) || (obj.getClass() != this.getClass())) {
            return false;
        }

        CreateUnionRequest that = (CreateUnionRequest) obj;

        return (this.tableName.equals(that.tableName)
                && this.tableNames.equals(that.tableNames)
                && this.inputColumnNames.equals(that.inputColumnNames)
                && this.outputColumnNames.equals(that.outputColumnNames)
                && this.options.equals(that.options));
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append("{");
        builder.append(gd.toString("tableName"));
        builder.append(": ");
        builder.append(gd.toString(this.tableName));
        builder.append(", ");
        builder.append(gd.toString("tableNames"));
        builder.append(": ");
        builder.append(gd.toString(this.tableNames));
        builder.append(", ");
        builder.append(gd.toString("inputColumnNames"));
        builder.append(": ");
        builder.append(gd.toString(this.inputColumnNames));
        builder.append(", ");
        builder.append(gd.toString("outputColumnNames"));
        builder.append(": ");
        builder.append(gd.toString(this.outputColumnNames));
        builder.append(", ");
        builder.append(gd.toString("options"));
        builder.append(": ");
        builder.append(gd.toString(this.options));
        builder.append("}");

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.tableName.hashCode();
        hashCode = (31 * hashCode) + this.tableNames.hashCode();
        hashCode = (31 * hashCode) + this.inputColumnNames.hashCode();
        hashCode = (31 * hashCode) + this.outputColumnNames.hashCode();
        hashCode = (31 * hashCode) + this.options.hashCode();
        return hashCode;
    }

    /**
     * Optional parameters.
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#COLLECTION_NAME
     * COLLECTION_NAME}: Name of a collection which is to contain the output
     * table. If the collection provided is non-existent, the collection will
     * be automatically created. If empty, the output table will be a top-level
     * table.  The default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#MATERIALIZE_ON_GPU
     * MATERIALIZE_ON_GPU}: No longer used.  See <a
     * href="../../../../../rm/concepts.html" target="_top">Resource Management
     * Concepts</a> for information about how resources are managed, <a
     * href="../../../../../rm/concepts.html" target="_top">Tier Strategy
     * Concepts</a> for how resources are targeted for VRAM, and <a
     * href="../../../../../rm/usage.html#tier-strategies" target="_top">Tier
     * Strategy Usage</a> for how to specify a table's priority in VRAM.
     * Supported values:
     * <ul>
     *         <li> {@link com.gpudb.protocol.CreateUnionRequest.Options#TRUE
     * TRUE}
     *         <li> {@link com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     * FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#FALSE FALSE}.
     *         <li> {@link com.gpudb.protocol.CreateUnionRequest.Options#MODE
     * MODE}: If {@code merge_views}, then this operation will merge the
     * provided views. All {@code tableNames} must be views from the same
     * underlying base table.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#UNION_ALL UNION_ALL}:
     * Retains all rows from the specified tables.
     *         <li> {@link com.gpudb.protocol.CreateUnionRequest.Options#UNION
     * UNION}: Retains all unique rows from the specified tables (synonym for
     * {@code union_distinct}).
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#UNION_DISTINCT
     * UNION_DISTINCT}: Retains all unique rows from the specified tables.
     *         <li> {@link com.gpudb.protocol.CreateUnionRequest.Options#EXCEPT
     * EXCEPT}: Retains all unique rows from the first table that do not appear
     * in the second table (only works on 2 tables).
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#EXCEPT_ALL EXCEPT_ALL}:
     * Retains all rows(including duplicates) from the first table that do not
     * appear in the second table (only works on 2 tables).
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#INTERSECT INTERSECT}:
     * Retains all unique rows that appear in both of the specified tables
     * (only works on 2 tables).
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#INTERSECT_ALL
     * INTERSECT_ALL}: Retains all rows(including duplicates) that appear in
     * both of the specified tables (only works on 2 tables).
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#MERGE_VIEWS MERGE_VIEWS}:
     * Merge two or more views (or views of views) of the same base data set
     * into a new view. If this mode is selected {@code inputColumnNames} AND
     * {@code outputColumnNames} must be empty. The resulting view would match
     * the results of a SQL OR operation, e.g., if filter 1 creates a view
     * using the expression 'x = 20' and filter 2 creates a view using the
     * expression 'x <= 10', then the merge views operation creates a new view
     * using the expression 'x = 20 OR x <= 10'.
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#UNION_ALL UNION_ALL}.
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#CHUNK_SIZE CHUNK_SIZE}:
     * Indicates the number of records per chunk to be used for this output
     * table.
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#CREATE_INDEXES
     * CREATE_INDEXES}: Comma-separated list of columns on which to create
     * indexes on the output table.  The columns specified must be present in
     * {@code outputColumnNames}.
     *         <li> {@link com.gpudb.protocol.CreateUnionRequest.Options#TTL
     * TTL}: Sets the <a href="../../../../../concepts/ttl.html"
     * target="_top">TTL</a> of the output table specified in {@code
     * tableName}.
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#PERSIST PERSIST}: If
     * {@code true}, then the output table specified in {@code tableName} will
     * be persisted and will not expire unless a {@code ttl} is specified.   If
     * {@code false}, then the output table will be an in-memory table and will
     * expire unless a {@code ttl} is specified otherwise.
     * Supported values:
     * <ul>
     *         <li> {@link com.gpudb.protocol.CreateUnionRequest.Options#TRUE
     * TRUE}
     *         <li> {@link com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     * FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#FALSE FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#VIEW_ID VIEW_ID}: ID of
     * view of which this output table is a member.  The default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#FORCE_REPLICATED
     * FORCE_REPLICATED}: If {@code true}, then the output table specified in
     * {@code tableName} will be replicated even if the source tables are not.
     * Supported values:
     * <ul>
     *         <li> {@link com.gpudb.protocol.CreateUnionRequest.Options#TRUE
     * TRUE}
     *         <li> {@link com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     * FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.CreateUnionRequest.Options#FALSE FALSE}.
     * </ul>
     * The default value is an empty {@link Map}.
     * A set of string constants for the parameter {@code options}.
     */
    public static final class Options {

        /**
         * Name of a collection which is to contain the output table. If the
         * collection provided is non-existent, the collection will be
         * automatically created. If empty, the output table will be a
         * top-level table.  The default value is ''.
         */
        public static final String COLLECTION_NAME = "collection_name";

        /**
         * No longer used.  See <a href="../../../../../rm/concepts.html"
         * target="_top">Resource Management Concepts</a> for information about
         * how resources are managed, <a href="../../../../../rm/concepts.html"
         * target="_top">Tier Strategy Concepts</a> for how resources are
         * targeted for VRAM, and <a
         * href="../../../../../rm/usage.html#tier-strategies"
         * target="_top">Tier Strategy Usage</a> for how to specify a table's
         * priority in VRAM.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#TRUE TRUE}
         *         <li> {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#FALSE FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#FALSE FALSE}.
         */
        public static final String MATERIALIZE_ON_GPU = "materialize_on_gpu";
        public static final String TRUE = "true";
        public static final String FALSE = "false";

        /**
         * If {@code merge_views}, then this operation will merge the provided
         * views. All {@code tableNames} must be views from the same underlying
         * base table.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#UNION_ALL UNION_ALL}:
         * Retains all rows from the specified tables.
         *         <li> {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#UNION UNION}: Retains
         * all unique rows from the specified tables (synonym for {@code
         * union_distinct}).
         *         <li> {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#UNION_DISTINCT
         * UNION_DISTINCT}: Retains all unique rows from the specified tables.
         *         <li> {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#EXCEPT EXCEPT}:
         * Retains all unique rows from the first table that do not appear in
         * the second table (only works on 2 tables).
         *         <li> {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#EXCEPT_ALL
         * EXCEPT_ALL}: Retains all rows(including duplicates) from the first
         * table that do not appear in the second table (only works on 2
         * tables).
         *         <li> {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#INTERSECT INTERSECT}:
         * Retains all unique rows that appear in both of the specified tables
         * (only works on 2 tables).
         *         <li> {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#INTERSECT_ALL
         * INTERSECT_ALL}: Retains all rows(including duplicates) that appear
         * in both of the specified tables (only works on 2 tables).
         *         <li> {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#MERGE_VIEWS
         * MERGE_VIEWS}: Merge two or more views (or views of views) of the
         * same base data set into a new view. If this mode is selected {@code
         * inputColumnNames} AND {@code outputColumnNames} must be empty. The
         * resulting view would match the results of a SQL OR operation, e.g.,
         * if filter 1 creates a view using the expression 'x = 20' and filter
         * 2 creates a view using the expression 'x <= 10', then the merge
         * views operation creates a new view using the expression 'x = 20 OR x
         * <= 10'.
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#UNION_ALL UNION_ALL}.
         */
        public static final String MODE = "mode";

        /**
         * Retains all rows from the specified tables.
         */
        public static final String UNION_ALL = "union_all";

        /**
         * Retains all unique rows from the specified tables (synonym for
         * {@code union_distinct}).
         */
        public static final String UNION = "union";

        /**
         * Retains all unique rows from the specified tables.
         */
        public static final String UNION_DISTINCT = "union_distinct";

        /**
         * Retains all unique rows from the first table that do not appear in
         * the second table (only works on 2 tables).
         */
        public static final String EXCEPT = "except";

        /**
         * Retains all rows(including duplicates) from the first table that do
         * not appear in the second table (only works on 2 tables).
         */
        public static final String EXCEPT_ALL = "except_all";

        /**
         * Retains all unique rows that appear in both of the specified tables
         * (only works on 2 tables).
         */
        public static final String INTERSECT = "intersect";

        /**
         * Retains all rows(including duplicates) that appear in both of the
         * specified tables (only works on 2 tables).
         */
        public static final String INTERSECT_ALL = "intersect_all";

        /**
         * Merge two or more views (or views of views) of the same base data
         * set into a new view. If this mode is selected {@code
         * inputColumnNames} AND {@code outputColumnNames} must be empty. The
         * resulting view would match the results of a SQL OR operation, e.g.,
         * if filter 1 creates a view using the expression 'x = 20' and filter
         * 2 creates a view using the expression 'x <= 10', then the merge
         * views operation creates a new view using the expression 'x = 20 OR x
         * <= 10'.
         */
        public static final String MERGE_VIEWS = "merge_views";

        /**
         * Indicates the number of records per chunk to be used for this output
         * table.
         */
        public static final String CHUNK_SIZE = "chunk_size";

        /**
         * Comma-separated list of columns on which to create indexes on the
         * output table.  The columns specified must be present in {@code
         * outputColumnNames}.
         */
        public static final String CREATE_INDEXES = "create_indexes";

        /**
         * Sets the <a href="../../../../../concepts/ttl.html"
         * target="_top">TTL</a> of the output table specified in {@code
         * tableName}.
         */
        public static final String TTL = "ttl";

        /**
         * If {@code true}, then the output table specified in {@code
         * tableName} will be persisted and will not expire unless a {@code
         * ttl} is specified.   If {@code false}, then the output table will be
         * an in-memory table and will expire unless a {@code ttl} is specified
         * otherwise.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#TRUE TRUE}
         *         <li> {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#FALSE FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#FALSE FALSE}.
         */
        public static final String PERSIST = "persist";

        /**
         * ID of view of which this output table is a member.  The default
         * value is ''.
         */
        public static final String VIEW_ID = "view_id";

        /**
         * If {@code true}, then the output table specified in {@code
         * tableName} will be replicated even if the source tables are not.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#TRUE TRUE}
         *         <li> {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#FALSE FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.CreateUnionRequest.Options#FALSE FALSE}.
         */
        public static final String FORCE_REPLICATED = "force_replicated";

        private Options() {
        }
    }

}
