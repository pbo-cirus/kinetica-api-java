/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;

import java.util.LinkedHashMap;
import java.util.Map;


/**
 * A set of parameters for {@link
 * com.gpudb.GPUdb#revokePermissionProc(RevokePermissionProcRequest)}.
 * <p>
 * Revokes a proc-level permission from a user or role.
 */
public class RevokePermissionProcRequest implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("RevokePermissionProcRequest")
            .namespace("com.gpudb")
            .fields()
            .name("name").type().stringType().noDefault()
            .name("permission").type().stringType().noDefault()
            .name("procName").type().stringType().noDefault()
            .name("options").type().map().values().stringType().noDefault()
            .endRecord();
    private String name;
    private String permission;
    private String procName;
    private Map<String, String> options;
    /**
     * Constructs a RevokePermissionProcRequest object with default parameters.
     */
    public RevokePermissionProcRequest() {
        name = "";
        permission = "";
        procName = "";
        options = new LinkedHashMap<>();
    }
    /**
     * Constructs a RevokePermissionProcRequest object with the specified
     * parameters.
     *
     * @param name       Name of the user or role from which the permission will be
     *                   revoked. Must be an existing user or role.
     * @param permission Permission to revoke from the user or role.
     *                   Supported values:
     *                   <ul>
     *                           <li> {@link
     *                   com.gpudb.protocol.RevokePermissionProcRequest.Permission#PROC_EXECUTE
     *                   PROC_EXECUTE}: Execute access to the proc.
     *                   </ul>
     * @param procName   Name of the proc to which the permission grants access.
     *                   Must be an existing proc, or an empty string if the
     *                   permission grants access to all procs.
     * @param options    Optional parameters.  The default value is an empty
     *                   {@link Map}.
     */
    public RevokePermissionProcRequest(String name, String permission, String procName, Map<String, String> options) {
        this.name = (name == null) ? "" : name;
        this.permission = (permission == null) ? "" : permission;
        this.procName = (procName == null) ? "" : procName;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return the schema for the class.
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    /**
     * @return Name of the user or role from which the permission will be
     * revoked. Must be an existing user or role.
     */
    public String getName() {
        return name;
    }

    /**
     * @param name Name of the user or role from which the permission will be
     *             revoked. Must be an existing user or role.
     * @return {@code this} to mimic the builder pattern.
     */
    public RevokePermissionProcRequest setName(String name) {
        this.name = (name == null) ? "" : name;
        return this;
    }

    /**
     * @return Permission to revoke from the user or role.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.RevokePermissionProcRequest.Permission#PROC_EXECUTE
     * PROC_EXECUTE}: Execute access to the proc.
     * </ul>
     */
    public String getPermission() {
        return permission;
    }

    /**
     * @param permission Permission to revoke from the user or role.
     *                   Supported values:
     *                   <ul>
     *                           <li> {@link
     *                   com.gpudb.protocol.RevokePermissionProcRequest.Permission#PROC_EXECUTE
     *                   PROC_EXECUTE}: Execute access to the proc.
     *                   </ul>
     * @return {@code this} to mimic the builder pattern.
     */
    public RevokePermissionProcRequest setPermission(String permission) {
        this.permission = (permission == null) ? "" : permission;
        return this;
    }

    /**
     * @return Name of the proc to which the permission grants access. Must be
     * an existing proc, or an empty string if the permission grants
     * access to all procs.
     */
    public String getProcName() {
        return procName;
    }

    /**
     * @param procName Name of the proc to which the permission grants access.
     *                 Must be an existing proc, or an empty string if the
     *                 permission grants access to all procs.
     * @return {@code this} to mimic the builder pattern.
     */
    public RevokePermissionProcRequest setProcName(String procName) {
        this.procName = (procName == null) ? "" : procName;
        return this;
    }

    /**
     * @return Optional parameters.  The default value is an empty {@link Map}.
     */
    public Map<String, String> getOptions() {
        return options;
    }

    /**
     * @param options Optional parameters.  The default value is an empty
     *                {@link Map}.
     * @return {@code this} to mimic the builder pattern.
     */
    public RevokePermissionProcRequest setOptions(Map<String, String> options) {
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return the schema object describing this class.
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index the position of the field to get
     * @return value of the field with the given index.
     * @throws IndexOutOfBoundsException
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.name;

            case 1:
                return this.permission;

            case 2:
                return this.procName;

            case 3:
                return this.options;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index the position of the field to set
     * @param value the value to set
     * @throws IndexOutOfBoundsException
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.name = (String) value;
                break;

            case 1:
                this.permission = (String) value;
                break;

            case 2:
                this.procName = (String) value;
                break;

            case 3:
                this.options = (Map<String, String>) value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }

        if ((obj == null) || (obj.getClass() != this.getClass())) {
            return false;
        }

        RevokePermissionProcRequest that = (RevokePermissionProcRequest) obj;

        return (this.name.equals(that.name)
                && this.permission.equals(that.permission)
                && this.procName.equals(that.procName)
                && this.options.equals(that.options));
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append("{");
        builder.append(gd.toString("name"));
        builder.append(": ");
        builder.append(gd.toString(this.name));
        builder.append(", ");
        builder.append(gd.toString("permission"));
        builder.append(": ");
        builder.append(gd.toString(this.permission));
        builder.append(", ");
        builder.append(gd.toString("procName"));
        builder.append(": ");
        builder.append(gd.toString(this.procName));
        builder.append(", ");
        builder.append(gd.toString("options"));
        builder.append(": ");
        builder.append(gd.toString(this.options));
        builder.append("}");

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.name.hashCode();
        hashCode = (31 * hashCode) + this.permission.hashCode();
        hashCode = (31 * hashCode) + this.procName.hashCode();
        hashCode = (31 * hashCode) + this.options.hashCode();
        return hashCode;
    }

    /**
     * Permission to revoke from the user or role.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.RevokePermissionProcRequest.Permission#PROC_EXECUTE
     * PROC_EXECUTE}: Execute access to the proc.
     * </ul>
     * A set of string constants for the parameter {@code permission}.
     */
    public static final class Permission {

        /**
         * Execute access to the proc.
         */
        public static final String PROC_EXECUTE = "proc_execute";

        private Permission() {
        }
    }

}
